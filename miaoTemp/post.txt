	public async Task<string> YuyuPost(WebProxy proxy, string content)
		{
			string result = "";
			try
			{
				ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12 | SecurityProtocolType.Tls | SecurityProtocolType.Tls11;
				this.WriteLog($"[{proxy?.Address}]-YuyuPost开始");
				var url = "https://cloud.cn2030.com/sc/api/User/OrderPost";
				HttpWebRequest req = (HttpWebRequest)WebRequest.Create(url);
				req.Method = "POST";
				req.Host = "cloud.cn2030.com";
				req.KeepAlive = isKeepAlive;
				req.Headers.Add("Cookie", this.CookieZ);
				req.UserAgent = Consts.UserAgent;
				req.ContentType = "application/json";
				string text4 = ((TimerHelper.GetTimeStampFF(DateTime.Now) + LastTime) / 1000L).ToString("000000000");
				req.Headers.Add("zftsl", JsonHelper.GenerateMD5("zfsw_" + text4));
				req.Referer = Consts.Referer;
				req.Headers.Add("Accept-Encoding", "gzip, deflate, br");
				req.Proxy = proxy;
				#region 添加Post 参数
				byte[] data = Encoding.UTF8.GetBytes(content);
				req.ContentLength = data.Length;
				using (Stream reqStream = req.GetRequestStream())
				{
					reqStream.Write(data, 0, data.Length);
					reqStream.Close();
				}

			#endregion
			
				var stopWatch = new Stopwatch();
				stopWatch.Start();
				HttpWebResponse resp = (await req.GetResponseAsync()) as HttpWebResponse;

				LastTime = TimerHelper.GetTimeStampFF(DateTime.Parse(resp.Headers["date"])) - TimerHelper.GetTimeStampFF(DateTime.Now);
				//if (resp.Headers["Set-Cookie"] != null)
				//{
				//	CookieZ = resp.Headers["Set-Cookie"].Split(';')[0];
				//}

				Stream myResponseStream = resp.GetResponseStream();
				StreamReader myStreamReader = new StreamReader(myResponseStream, Encoding.UTF8);
				string retString = myStreamReader.ReadToEnd();
				myStreamReader.Close();
				myResponseStream.Close();
				stopWatch.Stop();
				this.WriteLog($"[{proxy?.Address}]-YuyuPost 耗时:" + stopWatch.ElapsedMilliseconds); ;

				this.WriteLog($"[{proxy?.Address}]-YuyuPost结束");
				return retString;
			}
			catch (WebException ex)
			{
				this.WriteLog($"[{proxy?.Address}]-YuyuPost异常:" + ex?.Message);

				if (ex?.Response == null)
				{
					this.WriteLog($"[{proxy?.Address}]-YuyuPost结束 Null");
					return "";
				}
				Stream stream = ex.Response.GetResponseStream();
				//获取响应内容
				using (StreamReader reader = new StreamReader(stream, Encoding.UTF8))
				{
					result = reader.ReadToEnd();
				}

				this.WriteLog($"[{proxy?.Address}]-YuyuPost结束[异常]");
				return "";
			}
		}